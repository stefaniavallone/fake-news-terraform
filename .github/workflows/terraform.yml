name: 'Fake-News-Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
  
defaults:
  run:
    working-directory: ./tf/models/network
    
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: 'Run Azure CLI commands'
        run: |
          az account show
          az group list
          pwd 
          
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: cd ./tf/models/network && terraform init

      - name: Terraform Validate
        id: validate
        run: cd ./tf/models/network && terraform validate
      
      - name: Terraform test
        id: test
        run: cd ./tf/models/network && ls -lart
        continue-on-error: true
      
      - name: Terraform Plan
        id: plan
        run: cd ./tf/models/network && terraform plan -var-file=../../applications/env/develop.tfvars -lock=false
        continue-on-error: true

    
    
    
