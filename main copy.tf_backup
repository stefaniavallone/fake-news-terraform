data "azurerm_client_config" "current" {}
 
terraform {
    backend "local" {
    }
}
 
# Create Resource Group
resource "azurerm_resource_group" "fake_news_resource_group" {
  name     = var.fake_news_resource_group_name
  location = var.location
}

# Create Subnet
resource "azurerm_subnet" "fake_news_subnet" {
  name                  = var.fake_news_subnet_name
  address_prefixes      = ["10.0.2.0/24"]
  virtual_network_name = azurerm_virtual_network.fake_news_network.name
  resource_group_name  = azurerm_resource_group.fake_news_resource_group.name
  service_endpoints    = ["Microsoft.Sql", "Microsoft.Storage"]
}

# Create Network
resource "azurerm_virtual_network" "fake_news_network" {
  name                = var.fake_news_network_name
  address_space       = ["10.0.0.0/16"]
  resource_group_name = azurerm_resource_group.fake_news_resource_group.name
  location            = azurerm_resource_group.fake_news_resource_group.location
}

resource "azurerm_network_interface" "fake_news_network_interface" {
  name                = var.fake_news_network_interface_name
  location            = azurerm_resource_group.fake_news_resource_group.location
  resource_group_name = azurerm_resource_group.fake_news_resource_group.name

  ip_configuration {
    name                          = "testconfiguration1"
    subnet_id                     = azurerm_subnet.fake_news_subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

# Create Virtual Machine 
resource "azurerm_virtual_machine" "fake_news_virtual_machine" {
  name                  = var.fake_news_virtual_machine_name
  location              = azurerm_resource_group.fake_news_resource_group.location
  resource_group_name   = azurerm_resource_group.fake_news_resource_group.name
  network_interface_ids = [azurerm_network_interface.fake_news_network_interface.id]
  vm_size               = "Standard_DS1_v2"

  storage_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }

  storage_os_disk {
    name              = var.fake_news_virtual_machine_storage_os_disk1_name
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }

  os_profile {
    computer_name  = var.fake_news_virtual_machine_os_profile_name
    admin_username = "testadmin"
    admin_password = "Password1234!"
  }

  os_profile_linux_config {
    disable_password_authentication = false
  }

  tags = {
    environment = local.environment
  }
}

# Create Storage
resource "azurerm_storage_account" "fake_news_storage" {
  name                     = var.fake_news_storage_name
  location                 = azurerm_resource_group.fake_news_resource_group.location
  resource_group_name      = azurerm_resource_group.fake_news_resource_group.name
  account_tier             = "Standard"
  account_replication_type = "LRS"
  network_rules {
    default_action             = "Deny"
    ip_rules                   = ["100.0.0.1"]
    virtual_network_subnet_ids = [azurerm_subnet.fake_news_subnet.id]
  }

  tags = {
    environment = local.environment
  }
}

# Create Key Vault
resource "azurerm_key_vault" "fake_news_key_vault" {
  name                     = var.fake_news_key_vault_name
  resource_group_name      = azurerm_resource_group.fake_news_resource_group.name
  location                 = azurerm_resource_group.fake_news_resource_group.location
  tenant_id                = data.azurerm_client_config.current.tenant_id
  sku_name                 = "premium"
  purge_protection_enabled = true
}

# Create Insights
resource "azurerm_application_insights" "fake_news_insights" {
  name                = var.fake_news_insights_name
  location            = azurerm_resource_group.fake_news_resource_group.location
  resource_group_name = azurerm_resource_group.fake_news_resource_group.name
  application_type    = "web"
}

# Create Machine Learning
resource "azurerm_machine_learning_workspace" "fake_news_machine_learning" {
  name                    = var.fake_news_machine_learning_name
  location                = azurerm_resource_group.fake_news_resource_group.location
  resource_group_name     = azurerm_resource_group.fake_news_resource_group.name
  application_insights_id = azurerm_application_insights.fake_news_insights.id
  key_vault_id            = azurerm_key_vault.fake_news_key_vault.id
  storage_account_id      = azurerm_storage_account.fake_news_storage.id

  identity {
    type = "SystemAssigned"
  }
}

